# -*- coding: utf-8 -*-
"""
Created on Mon Jan 10 15:02:49 2022

@author: khb16
"""
# 1. 날짜 데이터 분리
import pandas as pd

df = pd.read_csv("stock-data.csv")
df

# 문자열인 날짜 데이터를 판다스 Timestamp로 변환
df['new_Date'] = pd.to_datetime(df['Date'])
print(df.head())
print('\n')

#          Date  Close  Start   High    Low  Volume   new_Date
# 0  2018-07-02  10100  10850  10900  10000  137977 2018-07-02
# 1  2018-06-29  10700  10550  10900   9990  170253 2018-06-29
# 2  2018-06-28  10400  10900  10950  10150  155769 2018-06-28
# 3  2018-06-27  10900  10800  11050  10500  133548 2018-06-27
# 4  2018-06-26  10800  10900  11000  10700   63039 2018-06-26

# dt 속성을 이용하여 new_Date 열의 연-월-일 정보를 년, 월, 일로 구분
df['Year'] = df['new_Date'].dt.year
df['Month'] = df['new_Date'].dt.month
df['Day'] = df['new_Date'].dt.day
print(df.head())
#          Date  Close  Start   High    Low  Volume   new_Date  Year  Month  Day
# 0  2018-07-02  10100  10850  10900  10000  137977 2018-07-02  2018      7    2
# 1  2018-06-29  10700  10550  10900   9990  170253 2018-06-29  2018      6   29
# 2  2018-06-28  10400  10900  10950  10150  155769 2018-06-28  2018      6   28
# 3  2018-06-27  10900  10800  11050  10500  133548 2018-06-27  2018      6   27
# 4  2018-06-26  10800  10900  11000  10700   63039 2018-06-26  2018      6   26

# Timestamp를 Period로 변환하여 연-월-일 표기 변경
df['Date_yr']= df['new_Date'].dt.to_period(freq='A')
df['Date_m']= df['new_Date'].dt.to_period(freq='M')
print(df.head())
#          Date  Close  Start   High    Low  ...  Year Month  Day  Date_yr   Date_m
# 0  2018-07-02  10100  10850  10900  10000  ...  2018     7    2     2018  2018-07
# 1  2018-06-29  10700  10550  10900   9990  ...  2018     6   29     2018  2018-06
# 2  2018-06-28  10400  10900  10950  10150  ...  2018     6   28     2018  2018-06
# 3  2018-06-27  10900  10800  11050  10500  ...  2018     6   27     2018  2018-06
# 4  2018-06-26  10800  10900  11000  10700  ...  2018     6   26     2018  2018-06

# 원하는 열을 새로운 행 인덱스로 지정
df.set_index('Date_m', inplace=True)
print(df.head())
#                Date  Close  Start   High  ...  Year  Month Day  Date_yr
# Date_m                                    ...                          
# 2018-07  2018-07-02  10100  10850  10900  ...  2018      7   2     2018
# 2018-06  2018-06-29  10700  10550  10900  ...  2018      6  29     2018
# 2018-06  2018-06-28  10400  10900  10950  ...  2018      6  28     2018
# 2018-06  2018-06-27  10900  10800  11050  ...  2018      6  27     2018
# 2018-06  2018-06-26  10800  10900  11000  ...  2018      6  26     2018

# -----------------------------------------------------------------------
# 2. 날짜 인덱스 활용
df = pd.read_csv("stock-data.csv")

df['new_Date'] = pd.to_datetime(df['Date'])
df.set_index('new_Date', inplace=True)
print(df.head())
print('\n')
print(df.index)
#                   Date  Close  Start   High    Low  Volume
# new_Date                                                  
# 2018-07-02  2018-07-02  10100  10850  10900  10000  137977
# 2018-06-29  2018-06-29  10700  10550  10900   9990  170253
# 2018-06-28  2018-06-28  10400  10900  10950  10150  155769
# 2018-06-27  2018-06-27  10900  10800  11050  10500  133548
# 2018-06-26  2018-06-26  10800  10900  11000  10700   63039


# DatetimeIndex(['2018-07-02', '2018-06-29', '2018-06-28', '2018-06-27',
#                '2018-06-26', '2018-06-25', '2018-06-22', '2018-06-21',
#                '2018-06-20', '2018-06-19', '2018-06-18', '2018-06-15',
#                '2018-06-14', '2018-06-12', '2018-06-11', '2018-06-08',
#                '2018-06-07', '2018-06-05', '2018-06-04', '2018-06-01'],
#               dtype='datetime64[ns]', name='new_Date', freq=None)

# 데이터 선택
df_y = df['2018']
df_ym = df.loc['2018-07']
df_ym_cols = df.loc['2018-07','Start':'High']
#             Start   High
# new_Date                
# 2018-07-02  10850  10900

df_ymd = df['2018-07-02']
df_ymd_range = df['2018-06-25':'2018-06-20']

# 시간 간격 계산. 최근 180일~189일 사이의 값들만 선택하기
today = pd.to_datetime('2018-12-25')  # 기준일 생성
df['time_delta'] = today - df.index   # 날짜 차이 계산
df.set_index('time_delta',inplace=True)
df_180 = df['180 days': '189 days']
print(df_180)
